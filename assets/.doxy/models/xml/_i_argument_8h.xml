<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_i_argument_8h" kind="file" language="C++">
    <compoundname>IArgument.h</compoundname>
    <includes refid="_i_identifiable_8h" local="yes">IIdentifiable.h</includes>
    <includes local="no">any</includes>
    <includes local="no">vector</includes>
    <includes local="no">typeinfo</includes>
    <includedby refid="_i_adapted_output_8h" local="yes">Models/Inc/IAdaptedOutput.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>Models/Inc/IArgument.h</label>
        <link refid="_i_argument_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IDescribable.h</label>
        <link refid="_i_describable_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IIdentifiable.h</label>
        <link refid="_i_identifiable_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>any</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="7">
        <label>typeinfo</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>Models/Inc/IAdaptedOutput.h</label>
        <link refid="_i_adapted_output_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Models/Inc/IAdaptedOutputFactory.h</label>
        <link refid="_i_adapted_output_factory_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>Models/Inc/IArgument.h</label>
        <link refid="_i_argument_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Models/Inc/ILinkableComponent.h</label>
        <link refid="_i_linkable_component_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_open_oasis_1_1_i_argument" prot="public">OpenOasis::IArgument</innerclass>
    <innernamespace refid="namespace_open_oasis">OpenOasis</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IIdentifiable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;any&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_open_oasis" kindref="compound">OpenOasis</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="class_open_oasis_1_1_i_argument" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_open_oasis_1_1_i_argument" kindref="compound">IArgument</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_open_oasis_1_1_i_identifiable" kindref="compound">IIdentifiable</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="class_open_oasis_1_1_i_argument_1a1f2d335bb484197fd2cb9b438762526d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;<ref refid="class_open_oasis_1_1_i_argument_1a1f2d335bb484197fd2cb9b438762526d" kindref="member">GetValueType</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_open_oasis_1_1_i_argument_1ab18aae1acdd750e54fbb23b7581a5a82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_open_oasis_1_1_i_argument_1ab18aae1acdd750e54fbb23b7581a5a82" kindref="member">IsOptional</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_open_oasis_1_1_i_argument_1a29968236da38adf1d8867684234d1f8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_open_oasis_1_1_i_argument_1a29968236da38adf1d8867684234d1f8f" kindref="member">IsReadOnly</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_open_oasis_1_1_i_argument_1ae40937af63362e203603b52fe0e87a7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::any<sp/><ref refid="class_open_oasis_1_1_i_argument_1ae40937af63362e203603b52fe0e87a7a" kindref="member">GetValue</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_open_oasis_1_1_i_argument_1a7325d42cad1e1c534a9b47dea8da0a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_open_oasis_1_1_i_argument_1a7325d42cad1e1c534a9b47dea8da0a53" kindref="member">SetValue</ref>(std::any<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_open_oasis_1_1_i_argument_1a112bbfabada7fc8477b86181a4434c9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::any<sp/><ref refid="class_open_oasis_1_1_i_argument_1a112bbfabada7fc8477b86181a4434c9c" kindref="member">GetDefaultValue</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_open_oasis_1_1_i_argument_1a5ac9c047bed9319e1e79761046fbbdd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::any&gt;<sp/><ref refid="class_open_oasis_1_1_i_argument_1a5ac9c047bed9319e1e79761046fbbdd4" kindref="member">GetPossibleValues</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>OpenOasis</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Models/Inc/IArgument.h"/>
  </compounddef>
</doxygen>
