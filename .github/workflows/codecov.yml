name: codecov

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: "OpenOasis code coverage actions"
    runs-on: ubuntu-latest
    env:
        COVERAGE_DATA_PATH: coverage-data/coverage.info    
    steps:
      - uses: actions/checkout@v2
      - name: Install GCC-10
        run: |
          sudo apt-get update
          sudo apt install gcc-10 g++-10 -y
          gcc --version
          g++ --version
          ls /usr/bin/gcc*
        shell: bash
      - name: Install Third party library
        run: |
          git clone https://github.com/pybind/pybind11.git
          cd  pybind11
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -fprofile-arcs -ftest-coverage
          cmake --build . --config Release
          sudo cmake --install .
        shell: bash
      - name: CMake Build
        run: |
          export pybind11_DIR=/usr/local/share/cmake/pybind11/
          cd ${{ github.workspace }}
          mkdir build
          cd build
          cmake .. -DENABLE_TESTS=on -DENABLE_PYLIB=on -DCMAKE_BUILD_TYPE:STRING=Release
          cmake --build .
        shell: bash 
      - name: Ctest
        run: |
          cd ${{ github.workspace }}/build
          ctest --output-on-failure -C Release -VV
        shell: bash     
      - name: Install LCOV
        run: |
          sudo apt-get --assume-yes install lcov > /dev/null
        shell: bash
      - name: run test
        run:  |
          cd ${{ github.workspace }}/build/bin
          OasisTests
        shell: bash        
      - name: lcov collection
        shell: bash
        run: |
          cd build
          lcov -c -d ./ -o cover.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
            gcov: true 
            gcov_include: ${{ github.workspace }}/Cores/*
            token: ${{ secrets.OPENOASIS_TOKEN }}